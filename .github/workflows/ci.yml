name: C CI

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Install build tools
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential
        sudo apt-get install -y libcunit1 libcunit1-doc libcunit1-dev libssh2-1-dev
    - name: Build and run tests
      run: |
        gcc -o messaging_module src/messaging.c tests/test_messaging.c -lcunit -lssh2
        ./messaging_module

  run_test:
    runs-on: ubuntu-latest
    needs: build  # Assure que le job de construction est terminé avant d'exécuter les tests
    if: github.ref == 'refs/heads/feature/main'  # Exécute uniquement sur la branche spécifiée

    steps:
      - uses: actions/checkout@v2  # Vérifie le code source

      - name: Run tests
        run: |
          ./messaging_module  # Exécute le programme pour les tests
          pytest --junitxml=report.xml  # Exécute les tests avec pytest et génère un rapport JUnit

  upload_artifacts:
    runs-on: ubuntu-latest
    needs: run_test  # Assure que le job de tests est terminé avant d'exécuter ce job

    steps:
      - name: Upload test report
        uses: actions/upload-artifact@v2
        with:
          name: junit-report
          path: report.xml  # Spécifie le rapport JUnit à collecter
